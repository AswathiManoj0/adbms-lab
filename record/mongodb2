10.Select documents in the products collection with the published date is 2020-
05-14:
Inventory> db.Products.find({ releaseDate: ISODate("2020-05-14") })
[
{
_id: 4,
name: 'SmartPad',
price: 699,
releaseDate: ISODate('2020-05-14T00:00:00.000Z'),
spec: { ram: 8, screen: 9.7, cpu: 1.66 },
color: [ 'white', 'orange', 'gold', 'gray' ],
storage: [ 128, 256, 1024 ]
}
]

11.select documents from the products collection where price is less than 799:
Inventory> db.Products.find({ price: { $lt: 799 } })
[
{
_id: 4,
name: 'SmartPad',
price: 699,
releaseDate: ISODate('2020-05-14T00:00:00.000Z'),
spec: { ram: 8, screen: 9.7, cpu: 1.66 },
color: [ 'white', 'orange', 'gold', 'gray' ],
storage: [ 128, 256, 1024 ]
},
{
_id: 5,
name: 'SmartPhone',
price: 599,
releaseDate: ISODate('2022-09-14T00:00:00.000Z'),
spec: { ram: 4, screen: 9.7, cpu: 1.66 },
color: [ 'white', 'orange', 'gold', 'gray' ],
storage: [ 128, 256 ]
}
]

12.select documents where the value of the screen field in the spec document is
less than 7:
Inventory> db.Products.find({ "spec.screen": { $lt: 7 } })
[
{
_id: 1,
name: 'xPhone',
price: 799,
releaseDate: ISODate('2011-05-14T00:00:00.000Z'),
spec: { ram: 4, screen: 6.5, cpu: 2.66 },
color: [ 'white', 'black' ],
storage: [ 64, 128, 256 ]
}
]

13. query the products collection to find all documents where the array storage
has at least one element less than 128:
Inventory> db.Products.find({ storage: { $elemMatch: { $lt: 128 } } })
[
{
_id: 1,
name: 'xPhone',
price: 799,
releaseDate: ISODate('2011-05-14T00:00:00.000Z'),
spec: { ram: 4, screen: 6.5, cpu: 2.66 },
color: [ 'white', 'black' ],
storage: [ 64, 128, 256 ]
},
{
_id: 3,
name: 'SmartTablet',
price: 899,
releaseDate: ISODate('2015-01-14T00:00:00.000Z'),
spec: { ram: 12, screen: 9.7, cpu: 3.66 },
color: [ 'blue' ],
storage: [ 16, 64, 128 ]
}
]

14.Display documents from the products collection whose the price is either
599 or 799:
Inventory> db.Products.find({ price: { $in: [599, 799] } })
[
{
_id: 1,
name: 'xPhone',
price: 799,
releaseDate: ISODate('2011-05-14T00:00:00.000Z'),
spec: { ram: 4, screen: 6.5, cpu: 2.66 },
color: [ 'white', 'black' ],
storage: [ 64, 128, 256 ]
},
{
_id: 5,
name: 'SmartPhone',
price: 599,
releaseDate: ISODate('2022-09-14T00:00:00.000Z'),
spec: { ram: 4, screen: 9.7, cpu: 1.66 },
color: [ 'white', 'orange', 'gold', 'gray' ],
storage: [ 128, 256 ]
}
]

15.Display documents where the color array has at least one element either
"black" or "white":
Inventory> db.Products.find({ color: { $in: ["black", "white"] } })
[
{
_id: 1,
name: 'xPhone',
price: 799,
releaseDate: ISODate('2011-05-14T00:00:00.000Z'),
spec: { ram: 4, screen: 6.5, cpu: 2.66 },
color: [ 'white', 'black' ],
storage: [ 64, 128, 256 ]
},
{
_id: 2,
name: 'xTablet',
price: 899,
releaseDate: ISODate('2011-09-01T00:00:00.000Z'),
spec: { ram: 16, screen: 9.5, cpu: 3.66 },
color: [ 'white', 'black', 'purple' ],
storage: [ 128, 256, 512 ]
},
{
_id: 4,
name: 'SmartPad',
price: 699,
releaseDate: ISODate('2020-05-14T00:00:00.000Z'),
spec: { ram: 8, screen: 9.7, cpu: 1.66 },
color: [ 'white', 'orange', 'gold', 'gray' ],
storage: [ 128, 256, 1024 ]
},
{
_id: 5,
name: 'SmartPhone',
price: 599,
releaseDate: ISODate('2022-09-14T00:00:00.000Z'),
spec: { ram: 4, screen: 9.7, cpu: 1.66 },
color: [ 'white', 'orange', 'gold', 'gray' ],
storage: [ 128, 256 ]
}
]

16. Display documents from the products collection whose price is neither
599 or 799:
Inventory> db.Products.find({ price: { $nin: [599, 799] } })
[
{
_id: 2,
name: 'xTablet',
price: 899,
releaseDate: ISODate('2011-09-01T00:00:00.000Z'),
spec: { ram: 16, screen: 9.5, cpu: 3.66 },
color: [ 'white', 'black', 'purple' ],
storage: [ 128, 256, 512 ]
},
{
_id: 3,
name: 'SmartTablet',
price: 899,
releaseDate: ISODate('2015-01-14T00:00:00.000Z'),
spec: { ram: 12, screen: 9.7, cpu: 3.66 },
color: [ 'blue' ],
storage: [ 16, 64, 128 ]
},
{
_id: 4,
name: 'SmartPad',
price: 699,
releaseDate: ISODate('2020-05-14T00:00:00.000Z'),
spec: { ram: 8, screen: 9.7, cpu: 1.66 },
color: [ 'white', 'orange', 'gold', 'gray' ],
storage: [ 128, 256, 1024 ]
}
]

17. Display documents where the color array doesnâ€Ÿt have an
element that is either "black" or "white":
Inventory> db.Products.find({ color: { $nin: ["black", "white"] } })
[
{
_id: 3,
name: 'SmartTablet',
price: 899,
releaseDate: ISODate('2015-01-14T00:00:00.000Z'),
spec: { ram: 12, screen: 9.7, cpu: 3.66 },
color: [ 'blue' ],
storage: [ 16, 64, 128 ]
}
]

18.Display all documents in the products collection where the value in the
price field is equal to 899 and the value in the color field is either "white" or
"black"
Inventory> db.Products.find({
price: 899,
color: { $in: ["black", "white"] }})
[
{
_id: 2,
name: 'xTablet',
price: 899,
releaseDate: ISODate('2011-09-01T00:00:00.000Z'),
spec: { ram: 16, screen: 9.5, cpu: 3.66 },
color: [ 'white', 'black', 'purple' ],
storage: [ 128, 256, 512 ]
}
]

19.Select all documents where the price is less than 699 or greater than 799
Inventory> db.Products.find({
$or: [
{ price: { $lt: 699 } },
{ price: { $gt: 799 } }
]
})
[
{
_id: 2,
name: 'xTablet',
price: 899,
releaseDate: ISODate('2011-09-01T00:00:00.000Z'),
spec: { ram: 16, screen: 9.5, cpu: 3.66 },
color: [ 'white', 'black', 'purple' ],
storage: [ 128, 256, 512 ]
},
{
_id: 3,
name: 'SmartTablet',
price: 899,
releaseDate: ISODate('2015-01-14T00:00:00.000Z'),
spec: { ram: 12, screen: 9.7, cpu: 3.66 },
color: [ 'blue' ],
storage: [ 16, 64, 128 ]
},
{
_id: 5,
name: 'SmartPhone',
price: 599,
releaseDate: ISODate('2022-09-14T00:00:00.000Z'),
spec: { ram: 4, screen: 9.7, cpu: 1.66 },
color: [ 'white', 'orange', 'gold', 'gray' ],
storage: [ 128, 256 ]
}
]
